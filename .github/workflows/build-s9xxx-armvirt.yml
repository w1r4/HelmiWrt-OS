#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Repack HelmiWrt OS for s905x devices using GitHub Actions
# Lisence: MIT
# Repacker : Raditya Budi Handoko <https://github.com/radityabh>
# HelmiWrt OS by helmiau.com
#=================================================

name: Build s9xxx armvirt based

on:
  workflow_dispatch:
#  schedule:
#    - cron: 59 23 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/radityabh/amlogic-s9xxx-openwrt
  REPO_BRANCH: main
  HELMIWRT_REL: https://github.com/helmiau/HelmiWrt-OS/releases/download/helmiwrt
  HELMIWRT_FILENAME: helmiwrt-armvirt-64-default-rootfs.tar.gz
  UPLOAD_RELEASE: true
  TZ: Asia/Jakarta

jobs:
  Build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H:%M")" >> $GITHUB_ENV
        echo "BUILD_TAG=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS/releases | jq -r 'first | .tag_name' | sed 's/helmiwrt-//g')" >> $GITHUB_ENV
        export WORKFLOWNAME=$HELMIWRT_FILENAME
        echo "WORKFLOWNAME=$HELMIWRT_FILENAME" >> $GITHUB_ENV

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        sed -i '/HelmiWrt_/c\ build_image_file="${out_path}/helmiwrt-\${build_op}-k\${kernel}.img"' openwrt/makeHelmi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      id: feeds
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

    - name: Repacking HelmiWrt firmware
      id: build
      run: |
        cd $OPENWRTROOT
        [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
        # Download Firmware
        echo "${{ env.BUILD_TAG }} build found ! Using this build for repack."
        wget -q --show-progress -P openwrt-armvirt $HELMIWRT_REL-${{ env.BUILD_TAG }}/$HELMIWRT_FILENAME
        # Build Firmware
        sudo chmod +x makeHelmi
        sudo ./makeHelmi -d -b s905x3_s905x2_s905x_s905w_s905d_s922x_s912 -k 5.4.0_5.15.15 -a false
        echo "PACKAGED_OUTPUTPATH=${PWD}/out" >> $GITHUB_ENV
        echo "PACKAGED_OUTPUTDATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
        find . -type f -name '$HELMIWRT_FILENAME' -exec rm "{}" \;
        echo "::set-output name=status::success"
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.BUILD_TAG }}${{ env.FILE_DATE }}
        path: ${{ env.PACKAGED_OUTPUTPATH}}
    - name: Upload Firmware Files to GitHub Release
      uses: ncipollo/release-action@v1
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        prerelease: true
        token: ${{ secrets.HELMIWRT_RW }}
        name: HelmiWrt Test ${{ env.BUILD_TAG }}
        tag: helmiwrt-${{ env.BUILD_TAG }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/helmiwrt-s9*
        body: |
          **HelmiWrt is custom OpenWrt build for**
          - Raspberry Pi 1,2,3,4
          - x86/64 (PC)
          - NanoPi R2C, R2S and R4S
          - OrangePi Zero, R1 Plus
          - Set-top-box s9xxx chipset
          [Donation here](https://www.helmiau.com/pay/index_en.html) â€¢ [Read more firmware info and guides](https://www.google.com/search?q=helmi+wrt+os)
